[{"C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\App.js":"1","C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\index.js":"2","C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\components\\Pagination.js":"3","C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\components\\SelectedUser.js":"4","C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\components\\Play.js":"5"},{"size":7244,"mtime":1610902393212,"results":"6","hashOfConfig":"7"},{"size":219,"mtime":1608829115514,"results":"8","hashOfConfig":"7"},{"size":555,"mtime":1610385525779,"results":"9","hashOfConfig":"7"},{"size":1546,"mtime":1610898054425,"results":"10","hashOfConfig":"7"},{"size":3197,"mtime":1610898059584,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"d8jho2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\App.js",["24"],"import React, { Fragment, useEffect, useState } from 'react'\n// import Pagination from \"./components/Pagination\";\nimport './App.css';\nimport logo from './img/logo2.svg'\nimport trophy from './img/trophy.svg'\nimport bet from './img/bet.svg'\nimport coin from './img/coin.svg'\nimport search from './img/search.svg'\nimport loader from './img/loader.gif'\nimport SelectedUser from './components/SelectedUser'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\nimport Play from './components/Play'\n\nfunction App() {\n  const [userlist, setUserlist] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [selectedUser , setSelectedUser] = useState([])\n  \n\n\n  useEffect(() => {\n    setLoading(true)\n    fetch('https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json')\n    .then(res => res.json())\n    .then(data => {\n      // setUserlist(data)\n      let test = [...data]\n      let result = test.map(function(el) {\n        let img_url = el['Profile Image']\n        let n = img_url.lastIndexOf('/');\n        let result = img_url.substring(n + 1);\n        let unique_id = result.slice(0, result.indexOf(\".\"));\n        let o = Object.assign({}, el);\n        o.id = unique_id\n        o.select = false;\n        o.level = 0;\n        o.win = 0;\n        o.lost = 0;\n        return o;\n      })\n      setUserlist(result)\n      setLoading(false)\n    })\n  }, [])\n\n// useEffect(() => {\n//   const data = [ ...userlist ]\n//   setUserlist(data)\n// },[selectedUser])\n\n  const checkClicked = (e, list) => {\n    let checked = e.target.checked;\n    setUserlist(userlist.map((data) => {\n      if(list.id === data.id){\n        data.select = checked\n      }\n      return data\n    }))\n    \n    if(checked === true){\n      setSelectedUser([...selectedUser, list])\n    }else{\n      const filteredItems = selectedUser.filter(item => item.id !== list.id)\n      setSelectedUser(filteredItems)\n    }\n  }\n\n  const sortFunction = (e) => {\n    let drop_value = e.target.value\n    if(drop_value === 'price_high_to_low'){\n      const data_array = [ ...userlist ]\n      setUserlist(data_array.sort(function(a, b){return b.Price - a.Price}))\n    }\n    if(drop_value === 'price_low_to_high'){\n      const data_array = [ ...userlist ]\n      setUserlist(data_array.sort(function(a, b){return a.Price - b.Price}))\n    }\n    if(drop_value === 'bet_high_to_low'){\n      const data_array = [ ...userlist ]\n      setUserlist(data_array.sort(function(a, b){return b.Bet - a.Bet}))\n    }\n    if(drop_value === 'bet_low_to_high'){\n      const data_array = [ ...userlist ]\n      setUserlist(data_array.sort(function(a, b){return a.Bet - b.Bet}))\n    }\n  }\n\n  return (\n    <Router>\n      <Route exact path=\"/\" >\n        <Fragment>\n            <div className='side_nav_wrapper'>\n              <div className='img_box'>\n                <img className='logo_img' src={logo} alt='logo'/>\n              </div>\n              <div className='selected_player_list_wrapper'>\n              <SelectedUser selectedUser={selectedUser} />\n              </div>\n              <div className='side_nav_footer'>\n                <Link to=\"/play\"><button className='start_btn' disabled={selectedUser.length === 9 ? false : true}>Start</button></Link>\n                <label className='select_alert'>{selectedUser.length < 9 ? 'Please select exact 9 players !' : ''}</label>\n                <label className='select_alert'>{selectedUser.length > 9 ? 'Please select exact 9 players !' : ''}</label>\n              </div>\n            </div>\n            <div className='main_wrapper'>\n              <div className='main_header'>\n                <p>Select playing 9</p>\n              </div>\n              <div className='filter_row'>\n                <div className=''>\n                  <div className='search_input_box'>\n                    <img src={search} alt=\"icon\" className=\"search_icon\"/>\n                    <input onChange={(e) => setSearchTerm(e.target.value)} type=\"text\" className=\"search_table_input\" placeholder='Search Players' />\n                  </div>\n                </div>\n                <div className='sort_section'>\n                  <label className='sort_lab'>Sort by</label>\n                    <select  id=\"sort_select\" className='sort_dropdown' onChange={(e) => sortFunction(e)}>\n                      <option value=\"price_high_to_low\">Price : High to Low</option>\n                      <option value=\"price_low_to_high\">Price : Low to High</option>\n                      <option value=\"bet_high_to_low\">Bet : High to Low</option>\n                      <option value=\"bet_low_to_high\">Bet : Low to High</option>\n                    </select>\n                </div>\n                \n              </div>\n              <div className='table_wrapper'>\n                <table cellSpacing={0} cellPadding={0} className='table_ht'>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">SELECT</th>\n                        <th scope=\"col\" className='user_name_head'>PLAYER NAME</th>\n                        <th scope=\"col\">LEVEL</th>\n                        <th scope=\"col\">AVATAR</th>\n                        <th scope=\"col\"><img src={bet} alt='user img' />BET</th>\n                        <th scope=\"col\"><img src={trophy} alt='user img' />WIN</th>\n                        <th scope=\"col\">LOST</th>\n                        <th scope=\"col\"><img src={coin} alt='user img' />PRICE</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        loading === false ?\n                        userlist.filter((val) => {\n                          if(searchTerm === ''){\n                            return val\n                          }else if(val.Name.toLowerCase().includes(searchTerm.toLowerCase())){\n                            console.log('full',{searchTerm})\n                            return val\n                          }\n                        }).map((list)  => (\n                          <tr key={list.id}>\n                            <td data-label=\"checkbox\"><input onChange={(e) => checkClicked(e, list)}  type=\"Checkbox\" defaultChecked={list.select}  /></td>\n                            <td data-label=\"name\" className='user_name_val'>{list.Name}</td>\n                            <td data-label=\"level\">{list.level}</td>\n                            <td data-label=\"avatar\"><img src={list['Profile Image']} alt='user img' className='avatar_img' /></td>\n                            <td data-label=\"bet\">{list.Bet}</td>\n                            <td data-label=\"win\">{list.win}</td>\n                            <td data-label=\"lost\">{list.lost}</td>\n                            <td data-label=\"price\">{list.Price}</td>\n                          </tr>\n                        )) : <tr><td><img width={24} src={loader} alt=\"Loading...\"/></td></tr>\n                      }\n                    </tbody>\n                  </table>\n                  <hr className='hr_line' />\n              </div>\n            </div>\n        </Fragment>\n      </Route>\n      <Route path=\"/play\">\n        <Play selectedUser={selectedUser}  />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\index.js",[],["25","26"],"C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\components\\Pagination.js",[],"C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\components\\SelectedUser.js",[],"C:\\Users\\Administrator1\\Desktop\\react front to back\\b_cal\\src\\components\\Play.js",["27"],{"ruleId":"28","severity":1,"message":"29","line":145,"column":47,"nodeType":"30","messageId":"31","endLine":145,"endColumn":49},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":24,"column":8,"nodeType":"38","endLine":24,"endColumn":10,"suggestions":"39"},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedUser'. Either include it or remove the dependency array. If 'setWinner' needs the current value of 'selectedUser', you can also switch to useReducer instead of useState and read 'selectedUser' in the reducer.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [selectedUser]",{"range":"45","text":"46"},[899,901],"[selectedUser]"]